<Fluent:RibbonWindow x:Class="BatchRenameUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BatchRenameUI"
        mc:Ignorable="d"
        Title="Batch Rename" Height="610" Width="1000"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Loaded="RibbonWindow_Loaded"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="Open Sans"
        >
    <StackPanel>

        <Fluent:Ribbon>
            <Fluent:RibbonTabItem Header="Home">
                <Fluent:RibbonGroupBox Header="Starter" Height="150">
                    <Fluent:Button Name="ButtonDrag" Click="ButtonDrag_Click" Header="Drag" Foreground="Indigo" LargeIcon="{materialDesign:PackIcon Size=30, Kind=OpenInApp}" Margin="10,10,0,10"/>
                    <Fluent:Button Name="ButtonBrowseFiles" Click="ButtonBrowseFiles_Click" Header="Browse Files" Foreground="Indigo" LargeIcon="{materialDesign:PackIcon Size=30, Kind=File}" Margin="10,10,0,10"/>
                    <Fluent:Button Name="ButtonBrowseFolders" Click="ButtonBrowseFolders_Click" Header="Browse Folders" Foreground="Indigo" LargeIcon="{materialDesign:PackIcon Size=30, Kind=Folder}" Margin="10,10,0,10"/>
                    <Fluent:Button Name="ButtonRecursiveAdd" Click="ButtonRecursiveAdd_Click" Header="Browse Recursively" Foreground="Indigo" LargeIcon="{materialDesign:PackIcon Size=30, Kind=StackOverflow}" Margin="10,10,0,10"/>
                
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Rename" Height="150">
                    <Fluent:Button Name="ButtonPreview" Click="ButtonPreview_Click" Header="Preview" Foreground="Indigo" LargeIcon="{materialDesign:PackIcon Size=30, Kind=Eye}" Margin="10,10,0,0"/>
                    <Fluent:Button Name="ButtonRename" Click="ButtonRename_Click" Header="Rename" Foreground="Indigo" LargeIcon="{materialDesign:PackIcon Size=30, Kind=FormTextbox}" Margin="10,10,0,0"/>
                    <Fluent:Button Name="ButtonRenameAndCreateCopy" Click="ButtonRenameAndCreateCopy_Click" Header="Create a copy" Foreground="Indigo" LargeIcon="{materialDesign:PackIcon Size=30, Kind=ContentCopy}" Margin="10,10,10,10"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
            </Grid>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ComboBox
                        VerticalAlignment="Center"
                        Margin="10,20,10,10"
                        x:Name="RuleComboBox"
                        Style="{StaticResource MaterialDesignOutlinedComboBox}"
                        materialDesign:HintAssist.Hint="Rule"/>
                <Button x:Name="AddNewRule" Grid.Column="1" Click="AddNewRule_Click" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Margin="0,10,10,0">
                    <materialDesign:PackIcon Height="30" Width="30" Kind="PlusCircle" />
                </Button>
            </Grid>
            <Border Grid.Row="3" CornerRadius="10">
                <GroupBox
                Foreground="Indigo"
                Height="350"
                Padding="10"
                Margin="10">
                    <GroupBox.Header>
                        <TextBlock Text="List of Rules" Foreground="White"></TextBlock>
                    </GroupBox.Header>
                    <ListBox x:Name="MyListBox" ScrollViewer.VerticalScrollBarVisibility="Visible" SelectedItem="{Binding SelectedRule}" >
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                                <Setter
                                Property="materialDesign:ListBoxItemAssist.ShowSelection"
                                Value="True" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Style.Triggers>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="IsSelected" Value="True"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock TextWrapping="Wrap" VerticalAlignment="Center"  Grid.Column="0" Text="{Binding .}"/>
                                    <StackPanel Grid.Column="1" HorizontalAlignment="Right" Margin="10,0,10,0" Orientation="Horizontal">
                                        <Button x:Name="PencilEdit" Click="PencilEdit_Click" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" Margin="0,0,10,0">
                                            <materialDesign:PackIcon Kind="Pencil" />
                                        </Button>
                                        <Button x:Name="GarbageDelete" Click="GarbageDelete_Click" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}">
                                            <materialDesign:PackIcon Kind="Delete" />
                                        </Button>

                                    </StackPanel>

                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </GroupBox>
            </Border>
            <DataGrid
              ScrollViewer.CanContentScroll="True"
              ScrollViewer.VerticalScrollBarVisibility="Auto"
              ScrollViewer.HorizontalScrollBarVisibility="Auto"
              MaxHeight="400"
              x:Name="GridOfNames"
              Margin="10"
              Grid.Column="1"
              Grid.RowSpan="3"
              ItemsSource="{Binding Items}"
              CanUserAddRows="False"
              AutoGenerateColumns="False"
              SelectionUnit="FullRow"
              SelectionMode="Extended">
                <DataGrid.ItemContainerStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="IsSelected" Value="True"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.ItemContainerStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Type" Width="*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" 
                           TextWrapping="Wrap"
                           Text="{Binding Type}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Old Name" Width="*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" 
                           TextWrapping="Wrap"
                           Text="{Binding OldName}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="New Name" Width="*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" 
                           TextWrapping="Wrap"
                           Text="{Binding NewName}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Path" Width="2*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" 
                           TextWrapping="Wrap"
                           Text="{Binding Path}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Delete" Width="*">
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button x:Name="DeleteItem" Click="DeleteItem_Click" Style="{StaticResource MaterialDesignIconButton}">
                                    <materialDesign:PackIcon Height="20" Width="20" Kind="Delete" />
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </StackPanel>
</Fluent:RibbonWindow>
